package earcut

import "testing"

func TestNoCrash(t *testing.T) {
	verts := []Vertex{
		Vertex{P: [2]float64{40.3732429, 73.4620626}},
		Vertex{P: [2]float64{40.3732467, 73.4620425}},
		Vertex{P: [2]float64{40.3732501, 73.4620222}},
		Vertex{P: [2]float64{40.3732532, 73.4620019}},
		Vertex{P: [2]float64{40.3732560, 73.4619814}},
		Vertex{P: [2]float64{40.3732585, 73.4619609}},
		Vertex{P: [2]float64{40.3732607, 73.4619403}},
		Vertex{P: [2]float64{40.3732626, 73.4619196}},
		Vertex{P: [2]float64{40.3732642, 73.4618989}},
		Vertex{P: [2]float64{40.3732656, 73.4618781}},
		Vertex{P: [2]float64{40.3732666, 73.4618574}},
		Vertex{P: [2]float64{40.3732673, 73.4618366}},
		Vertex{P: [2]float64{40.3732677, 73.4618158}},
		Vertex{P: [2]float64{40.3732678, 73.4617951}},
		Vertex{P: [2]float64{40.3732676, 73.4617743}},
		Vertex{P: [2]float64{40.3732671, 73.4617535}},
		Vertex{P: [2]float64{40.3732663, 73.4617328}},
		Vertex{P: [2]float64{40.3732645, 73.4616943}},
		Vertex{P: [2]float64{40.3732556, 73.4615234}},
		Vertex{P: [2]float64{40.3732554, 73.4615186}},
		Vertex{P: [2]float64{40.3732551, 73.4615139}},
		Vertex{P: [2]float64{40.3732547, 73.4615091}},
		Vertex{P: [2]float64{40.3732543, 73.4615044}},
		Vertex{P: [2]float64{40.3732537, 73.4614997}},
		Vertex{P: [2]float64{40.3732530, 73.4614949}},
		Vertex{P: [2]float64{40.3732523, 73.4614902}},
		Vertex{P: [2]float64{40.3732515, 73.4614854}},
		Vertex{P: [2]float64{40.3732506, 73.4614807}},
		Vertex{P: [2]float64{40.3732496, 73.4614761}},
		Vertex{P: [2]float64{40.3732486, 73.4614715}},
		Vertex{P: [2]float64{40.3732474, 73.4614669}},
		Vertex{P: [2]float64{40.3732462, 73.4614625}},
		Vertex{P: [2]float64{40.3732450, 73.4614580}},
		Vertex{P: [2]float64{40.3732437, 73.4614537}},
		Vertex{P: [2]float64{40.3732423, 73.4614493}},
		Vertex{P: [2]float64{40.3733423, 73.4613703}},
		Vertex{P: [2]float64{40.3734578, 73.4612793}},
		Vertex{P: [2]float64{40.3734451, 73.4612900}},
		Vertex{P: [2]float64{40.3734329, 73.4613017}},
		Vertex{P: [2]float64{40.3734212, 73.4613145}},
		Vertex{P: [2]float64{40.3734101, 73.4613283}},
		Vertex{P: [2]float64{40.3733995, 73.4613431}},
		Vertex{P: [2]float64{40.3733896, 73.4613589}},
		Vertex{P: [2]float64{40.3733804, 73.4613755}},
		Vertex{P: [2]float64{40.3733720, 73.4613932}},
		Vertex{P: [2]float64{40.3733643, 73.4614115}},
		Vertex{P: [2]float64{40.3733576, 73.4614302}},
		Vertex{P: [2]float64{40.3733519, 73.4614493}},
		Vertex{P: [2]float64{40.3733472, 73.4614687}},
		Vertex{P: [2]float64{40.3733435, 73.4614882}},
		Vertex{P: [2]float64{40.3733407, 73.4615079}},
		Vertex{P: [2]float64{40.3733388, 73.4615276}},
		Vertex{P: [2]float64{40.3733379, 73.4615473}},
		Vertex{P: [2]float64{40.3733373, 73.4615789}},
		Vertex{P: [2]float64{40.3733371, 73.4616106}},
		Vertex{P: [2]float64{40.3733374, 73.4616423}},
		Vertex{P: [2]float64{40.3733381, 73.4616740}},
		Vertex{P: [2]float64{40.3733393, 73.4617057}},
		Vertex{P: [2]float64{40.3733410, 73.4617374}},
		Vertex{P: [2]float64{40.3733432, 73.4617690}},
		Vertex{P: [2]float64{40.3733459, 73.4618007}},
		Vertex{P: [2]float64{40.3733467, 73.4618095}},
		Vertex{P: [2]float64{40.3733479, 73.4618183}},
		Vertex{P: [2]float64{40.3733493, 73.4618272}},
		Vertex{P: [2]float64{40.3733510, 73.4618362}},
		Vertex{P: [2]float64{40.3733530, 73.4618451}},
		Vertex{P: [2]float64{40.3733553, 73.4618540}},
		Vertex{P: [2]float64{40.3733578, 73.4618628}},
		Vertex{P: [2]float64{40.3733606, 73.4618716}},
		Vertex{P: [2]float64{40.3733636, 73.4618804}},
		Vertex{P: [2]float64{40.3733669, 73.4618890}},
		Vertex{P: [2]float64{40.3733705, 73.4618975}},
		Vertex{P: [2]float64{40.3733743, 73.4619058}},
		Vertex{P: [2]float64{40.3733783, 73.4619139}},
		Vertex{P: [2]float64{40.3733825, 73.4619219}},
		Vertex{P: [2]float64{40.3733870, 73.4619296}},
		Vertex{P: [2]float64{40.3733917, 73.4619372}},
		Vertex{P: [2]float64{40.3733968, 73.4619445}},
		Vertex{P: [2]float64{40.3734020, 73.4619515}},
		Vertex{P: [2]float64{40.3734074, 73.4619582}},
		Vertex{P: [2]float64{40.3734129, 73.4619646}},
		Vertex{P: [2]float64{40.3734186, 73.4619707}},
		Vertex{P: [2]float64{40.3734244, 73.4619765}},
		Vertex{P: [2]float64{40.3734304, 73.4619820}},
		Vertex{P: [2]float64{40.3734365, 73.4619871}},
		Vertex{P: [2]float64{40.3734429, 73.4619919}},
		Vertex{P: [2]float64{40.3734493, 73.4619963}},
		Vertex{P: [2]float64{40.3734557, 73.4620004}},
		Vertex{P: [2]float64{40.3734622, 73.4620042}},
		Vertex{P: [2]float64{40.3734688, 73.4620076}},
		Vertex{P: [2]float64{40.3734753, 73.4620107}},
		Vertex{P: [2]float64{40.3734820, 73.4620135}},
		Vertex{P: [2]float64{40.3734886, 73.4620159}},
		Vertex{P: [2]float64{40.3736440, 73.4620692}},
		Vertex{P: [2]float64{40.3736607, 73.4620743}},
		Vertex{P: [2]float64{40.3736778, 73.4620783}},
		Vertex{P: [2]float64{40.3736950, 73.4620813}},
		Vertex{P: [2]float64{40.3737124, 73.4620832}},
		Vertex{P: [2]float64{40.3737300, 73.4620840}},
		Vertex{P: [2]float64{40.3737477, 73.4620836}},
		Vertex{P: [2]float64{40.3737655, 73.4620820}},
		Vertex{P: [2]float64{40.3737833, 73.4620792}},
		Vertex{P: [2]float64{40.3738010, 73.4620752}},
		Vertex{P: [2]float64{40.3738184, 73.4620701}},
		Vertex{P: [2]float64{40.3738354, 73.4620640}},
		Vertex{P: [2]float64{40.3738521, 73.4620567}},
		Vertex{P: [2]float64{40.3738685, 73.4620485}},
		Vertex{P: [2]float64{40.3738844, 73.4620392}},
		Vertex{P: [2]float64{40.3738998, 73.4620289}},
		Vertex{P: [2]float64{40.3739148, 73.4620176}},
		Vertex{P: [2]float64{40.3740170, 73.4619380}},
		Vertex{P: [2]float64{40.3740669, 73.4620486}},
		Vertex{P: [2]float64{40.3741429, 73.4622158}},
		Vertex{P: [2]float64{40.3741394, 73.4622084}},
		Vertex{P: [2]float64{40.3741355, 73.4622012}},
		Vertex{P: [2]float64{40.3741314, 73.4621941}},
		Vertex{P: [2]float64{40.3741270, 73.4621872}},
		Vertex{P: [2]float64{40.3741222, 73.4621805}},
		Vertex{P: [2]float64{40.3741171, 73.4621740}},
		Vertex{P: [2]float64{40.3741117, 73.4621677}},
		Vertex{P: [2]float64{40.3741059, 73.4621617}},
		Vertex{P: [2]float64{40.3740999, 73.4621558}},
		Vertex{P: [2]float64{40.3740937, 73.4621504}},
		Vertex{P: [2]float64{40.3740873, 73.4621453}},
		Vertex{P: [2]float64{40.3740806, 73.4621407}},
		Vertex{P: [2]float64{40.3740737, 73.4621365}},
		Vertex{P: [2]float64{40.3740667, 73.4621328}},
		Vertex{P: [2]float64{40.3740594, 73.4621296}},
		Vertex{P: [2]float64{40.3740519, 73.4621269}},
		Vertex{P: [2]float64{40.3740444, 73.4621247}},
		Vertex{P: [2]float64{40.3740369, 73.4621230}},
		Vertex{P: [2]float64{40.3740293, 73.4621218}},
		Vertex{P: [2]float64{40.3740218, 73.4621211}},
		Vertex{P: [2]float64{40.3740144, 73.4621209}},
		Vertex{P: [2]float64{40.3740069, 73.4621212}},
		Vertex{P: [2]float64{40.3739995, 73.4621220}},
		Vertex{P: [2]float64{40.3739921, 73.4621234}},
		Vertex{P: [2]float64{40.3739848, 73.4621252}},
		Vertex{P: [2]float64{40.3739778, 73.4621274}},
		Vertex{P: [2]float64{40.3739710, 73.4621301}},
		Vertex{P: [2]float64{40.3739644, 73.4621331}},
		Vertex{P: [2]float64{40.3739580, 73.4621365}},
		Vertex{P: [2]float64{40.3739518, 73.4621403}},
		Vertex{P: [2]float64{40.3739458, 73.4621444}},
		Vertex{P: [2]float64{40.3739400, 73.4621487}},
		Vertex{P: [2]float64{40.3739127, 73.4621705}},
		Vertex{P: [2]float64{40.3739053, 73.4621764}},
		Vertex{P: [2]float64{40.3738981, 73.4621829}},
		Vertex{P: [2]float64{40.3738912, 73.4621898}},
		Vertex{P: [2]float64{40.3738846, 73.4621973}},
		Vertex{P: [2]float64{40.3738783, 73.4622052}},
		Vertex{P: [2]float64{40.3738723, 73.4622135}},
		Vertex{P: [2]float64{40.3738665, 73.4622222}},
		Vertex{P: [2]float64{40.3738611, 73.4622313}},
		Vertex{P: [2]float64{40.3738559, 73.4622410}},
		Vertex{P: [2]float64{40.3738511, 73.4622508}},
		Vertex{P: [2]float64{40.3738467, 73.4622610}},
		Vertex{P: [2]float64{40.3738428, 73.4622713}},
		Vertex{P: [2]float64{40.3738393, 73.4622818}},
		Vertex{P: [2]float64{40.3738362, 73.4622926}},
		Vertex{P: [2]float64{40.3738334, 73.4623034}},
		Vertex{P: [2]float64{40.3738310, 73.4623144}},
		Vertex{P: [2]float64{40.3738010, 73.4624710}},
		Vertex{P: [2]float64{40.3732029, 73.4622721}}}

	p := Polygon{Vertices: verts}
	tris := Triangulate(p)

	expect := 162
	if len(tris) != expect {
		t.Errorf("Expected %d triangles; got %d", expect, len(tris))
	}
}
